import subprocess
import lit.formats

config.name = "KeyPathValidator"
config.test_format = lit.formats.ShTest(False)

clang_path = "your path to clang binary"
plugin_path = "your path to KeyPathValidatorPlugin.dylib"

config.clang = clang_path

def getClangBuiltinIncludeDir(clang):
    cmd = subprocess.Popen([clang, '-print-file-name=include'],
                           stdout=subprocess.PIPE)
    if not cmd.stdout:
      lit.fatal("Couldn't find the include dir for Clang ('%s')" % clang)
    return cmd.stdout.read().strip()

config.substitutions.append( ('%clang_cc1', '%s -cc1 -internal-isystem %s'
                              % (config.clang, getClangBuiltinIncludeDir(config.clang))) )

key_path_validator_plugin =  ("""%s -cc1 -internal-isystem %s 
             -load %s
             -plugin validate-key-paths 
             -fblocks -fsyntax-only -fobjc-arc
             """ % (config.clang, getClangBuiltinIncludeDir(config.clang), plugin_path) )

config.substitutions.append(('%key_path_validator_cc1', key_path_validator_plugin))


